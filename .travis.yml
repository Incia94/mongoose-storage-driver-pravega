git:
  depth: false
language: java

jdk:
  openjdk11

#addons:
#  ulimit:
#    nofile: 1048576
sudo: required
services:
  - docker

env:
  global:
#    - DOCKER_HOST=tcp://docker:2375
#    - DOCKER_DRIVER=overlay2
    - IMAGE_NAME=emcmongoose/mongoose-storage-driver-pravega
    - IMAGE_FILE_NAME=build/mongoose-storage-driver-pravega.tar
    - ROBOTEST_CONTAINER_WORKING_DIR=/root/mongoose
    - SERVICE_HOST=127.0.0.1

  # variable containing the 8 first characters of the git commit hash.
  # and two environment variables described in repository settings in Travis

    #- COMMIT=${TRAVIS_COMMIT::8}
    - secure: "uqpMB9LWKmDDwOTZkGhaf7ROUaRPNYRSvHQewqBZKzCw/jox3vwoamsy4aNA3SD0cWgh64Ojk5lc4WV40pOQjL/5fRXen4/mqIr6uHxz5rJtij+8Bx9eYCVskY90b0DWHnT8+Vukm283p3ucP4B0tFSALKFiMFWOrG/kbEt3WBgMrWhBAFOcSvhAmtu+b4IuDaIF0n2gwh1TBL+s+UauZQ/nSzFLBLyjb2v68GIEZmsRUyw2aFEObutppj7STtnKr1Nu2G2/Pz53CtusRB947PWFH5j/WUz+OETuJ3o7Fq/HV1B7g4E3dxsflzLmXhwynAHLZUdbHFvMfQJ1kHKPOQwRsJA5jjJcuxDzNQ40PhsISePCMh/txyZuyUh7hLxH4yv2MZ6IlT/BSkhGlmFYOjmOuBfRTyKiqgLn7lXk8HqsJy4/FjoAh/Pjj979IC4MXWi40RXas0fKTcDVzk77qwuydC5V1VXDKuFF5fiPkfhcpaBQ0YDcUCSsbWonsB9G56v25FrBI1TE1JvKwsTkZZ3B8GuW6E1EvbxDduPDp/QZLeG3MTsjHdEyZUM7tz1U8ouGckibZ8cQdBml5ONgeUMPyp7J49AAZ7gO36p/ManDScAVLWeMAfXTKktBGO4otX2LygDiYUkH9a5eeJFWpRAkTc87jhn0CKgTBNigEw0="
    - secure: "behFDyjsAiKxoGoqroAXEfzQx6TdydnwEypEkUJ0lDjTgn2rq7BbAj6gW/nX0W4mfYGaalf/9KEc24qFy/7fly1RMuno6n+KN8eT0dBd0ZyS1rnDqOetuSoukVwEI/r8Yx4PWmNcHi+004GmKpZQILHtNs07rcSFzdiGlj+8YvFFMiIpubdjJq0+ikm+a7QzysMLC5OqSywda1HpxrYF0Nk3w8PSr/tLIkMMsUbr0CrZwaOpbqP8p3pvArTOZ0xNagtUUMq+efJkvTOXTYwfxGTcy+KsBFd6xPdCtwX5ru4NJFixnJhW4nKRf61jqzA41hsjgxcCx3IOpInSQAvmSfCi5dtsn8aYZ2oWPYVME4vhmHJbsYgohuQr5ax6X32ZOYNfBMmJP+AzF1rCgZpnZFOU856g8RziVKb5CeA91OqclAgmINgQGMGBVKIbhGEBkMvD8cGudGTsSthtBDpDJ0dm/j/U3OPoexrPAr+hb7sCZCQL6e5n7um/Um82eRg5LdR2+ZKdQ6CQcCWGVWJ5i5KqjyRfMW6lEfGtJPmPuds7oPgzGppyYh8UERh9OxU01tbvdjevLgheOH/wD8YF+HLEs7Yw7Fisu0m1L23SLYiVlmXOklvEP36BRuUi0RUykhf2/EdQjFRQR934DHKXR1r2cXYE2gn5C/Bx4/JB3ro="
before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get update
  - sudo apt-get install python3
#  - sudo apt-get -y install docker-ce
  # prepare temp docker image for passing files
#  - docker build ...
stages:
#  - build
#  - unit tests
#  - integration tests
#  - build docker image
  - system tests
#  - release

# As Travis doesn't allow passing files between stages, two things were done:
# 1. build artifacts are saved to public storage and can be viewed there
# 2. temporary builds are passed between stages via docker image that is pushed and pulled during each stage

jobs:
  include:

#    - stage: build
#      script: "./gradlew clean jar"

#build:
#  stage: build
#  script:
#    - ./gradlew clean jar
#  tags:
#    - pravega
#  artifacts:
#    paths:
#      - build/libs/mongoose-*.jar


#    - stage: unit tests
#      script: "./gradlew test"
#      after_failure:
#        - more build/reports/tests/test/* | cat #TODO: upload these logs to google cloud?


#    - stage: integration tests
#      script:
#        #- ./gradlew pravegaExtract
#        #- nohup build/pravega_/bin/pravega-standalone 1,2 > build/pravega_nohup.out &
#        - docker run -d -e HOST_IP=${SERVICE_HOST} -p 9090:9090 -p 12345:12345 pravega/pravega:latest standalone
#        - sleep 15
#        - docker ps
#        - ./gradlew integrationTest
#      after_failure:
#        - cat build/pravega_nohup.out #TODO: upload this log to google cloud?
#        - more build/reports/tests/integrationTest/* | cat #TODO: upload these logs to google cloud?
#      after_script:
#        - killall java
#
#
#    - stage: build docker image
#      script:
#        - ./gradlew dockerBuildImage
#        - export VERSION=$(cat build.gradle | grep version\ = | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
#        - docker save ${IMAGE_NAME}:${VERSION} > ${IMAGE_FILE_NAME}
#        #- cat "${IMAGE_FILE_NAME}" #TODO: upload this tar artifact to google cloud?
#

    - stage: "System tests"
      env:
        - HOST_WORKING_DIR=${CI_PROJECT_DIR}
        #- PYTHONPATH=${PYTHONPATH}:/usr/lib/python2.7/site-packages:src/test/robot/lib
      script:
        # Install robotframework and keyword libs
        - sudo apt install python3-pip
        - sudo apt install python3-setuptools
        - pip3 install -U virtualenv
        - pip3 install -U requests
        - pip3 install -U robotframework
        - pip3 install -U robotframework-requests
        - pip3 install -U robotframework-csvlibrary
        # Load the testing docker image
        - export BASE_VERSION=$(cat build.gradle | grep mongooseBase  | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
        - export VERSION=$(cat build.gradle | grep version\ = | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
#        - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
#        - docker load < ${IMAGE_FILE_NAME} #TODO: network storage. Won't work rn.
        - ./gradlew dockerBuildImage
        #We either need to upload it to dockerhub and pull it back or do the same with tar
        # Run Pravega
        #- ./gradlew pravegaExtract
        #- nohup build/pravega_/bin/pravega-standalone 1,2 > build/pravega_nohup.out &
        - docker run -d -e HOST_IP=${SERVICE_HOST} -p 9090:9090 -p 12345:12345 pravega/pravega:latest standalone
        - sleep 15
        # Run the tests
        - robot --outputdir build/robotest --suite ${SUITE} --include ${TEST} src/test/robot
      after_failure:
        - cat build/pravega_nohup.out #TODO: upload this log to google cloud?
        - more build/robotest/*.html | cat #TODO: upload html-s to google cloud?

test_create_event_stream:
  extends: .test_robot
  variables:
    SUITE: api.storage
    TEST: create_event_stream

test_create_byte_streams:
  extends: .test_robot
  variables:
    SUITE: api.storage
    TEST: create_byte_streams

#test_read_byte_streams:
#  extends: .test_robot
#  variables:
#    SUITE: api.storage
#    TEST: read_byte_streams

#test_read_all_byte_streams:
#  extends: .test_robot
#  variables:
#    SUITE: api.storage
#    TEST: read_all_byte_streams

test_create_event_transaction_stream:
  extends: .test_robot
  variables:
    SUITE: api.storage
    TEST: create_event_transaction_stream


#      after_script:
#        - killall java
#        - rebot build/robotest/output.xml
#      artifacts:
#        paths:
#          - build/pravega_nohup.out
#          - build/robotest/*.html
#        when: on_failure

        #yep, outputting html to console so far

#    - stage: "Release to DockerHub"
#      if: (branch = master) AND (tag = latest)
#      script:
#        - if [ ! -z "$GPG_SECRET_KEYS" ]; then echo $GPG_SECRET_KEYS | base64 -d | gpg --import --batch; fi
#        - if [ ! -z "$GPG_OWNERTRUST" ]; then echo $GPG_OWNERTRUST | base64 -d | gpg --import-ownertrust --batch; fi
#        - mkdir /tmp/.gnupg
#        - if [ ! -z "$GPG_SECRING" ]; then echo $GPG_SECRING | base64 -d > /tmp/.gnupg/secring.gpg; fi
#        - ./gradlew clean jar
#        - ./gradlew -Psigning.keyId=${SIGNING_KEY_ID} -Psigning.password=${SIGNING_PASSWORD} -Psigning.secretKeyRingFile=/tmp/.gnupg/secring.gpg -PossrhUsername=${OSSRH_USERNAME} -PossrhPassword=${OSSRH_PASSWORD} publishToNexus closeAndReleaseRepository

#    - stage: "Release to maven"
#      if: (branch = master) AND (tag = latest)
#      script:
#        - docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
#        - docker load < ${IMAGE_FILE_NAME}
#        - export VERSION=$(cat build.gradle | grep version\ = | sed -n 's/.*\([0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
#        - docker push ${IMAGE_NAME}:${VERSION}
#        - docker tag ${IMAGE_NAME}:${VERSION} ${IMAGE_NAME}:latest
#        - docker push ${IMAGE_NAME}:latest




#    - stage: "Deploy to GitHub releases"
#      deploy:
#        skip_cleanup: true
#        provider: releases
#        api_key:
#          secure: sCzZ0wCOqzln2oQXkDSPr4Jv77QfktDStWD90y9VSS1lDn1CIRuH8OfUSnfeOmXtuNrMs+ngZw3e7y8QCCYpykancVKOpszgG1pYxcqEdFT9Dj8jzJAJXJZGHrT4E9lHFl3seNH0cFC5BCi2EyHP0Vb1MVBJKwSS0jW8oD9KLdcFaBM45RfTWMt22qHFEI+Bl6ButvRaGmCXgHqQ9fqu2yRaELl+pLT+D44ZS9uhHzoc0htbjnVyQWcCzzLxcAlP6r4YFlTqxznfALf0TRBkgvqqWZ2SnS3u8sd/TQMZAuKwIUFvhHLbiBkfrKH4Ers/gPzoJR8pi1/9CE9gAwHxaGPn2bcxYV/tKnD3B3BweMzairpoHd6um0Uas7EF5E7gj01DsvdgiMfA9PlDeDylzce8rJh5ZNVHGxI6INDDdmDUzo76s9W0d8bYJ5+rz2IfU5rGMaPckaq/b3tBN4yfdHxBAUE1R+OSd2TQ6YP6JP04McpTQb+D6Yo/ealyyt3Jh8Pz8pFq93FN0awUlE6fhIDvTqweBJh4quvGtydzbNukszgro2KMhiqaDuV4pXuIfNwy6KaNZDPui9zgRjDbTWFUlKQq2r0/Gk6tLu2ezPtsdS/KXMJlFkg8TCNN5PlTAlSAu9m8uXzm8/SRfMJvtLQB8pwz/oSjY0UNXHII9KQ=
#          file: "./build/libs/mongoose-storage-driver-pravega.jar"
#        on:
#          tags: true